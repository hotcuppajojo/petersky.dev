# .github/workflows/deploy.yml
name: Build and Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust Toolchain and Components if Necessary
        run: |
          if ! command -v rustc &> /dev/null; then
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          fi
          rustup update
          for component in rustfmt rust-analyzer; do
            if ! rustup component list --installed | grep -q "^${component} "; then
              rustup component add $component
            fi
          done

      - name: Cache Rust Toolchain and Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: rust-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-${{ runner.os }}-

      - name: Install wasm32 Target
        run: rustup target add wasm32-unknown-unknown

      - name: Cache Cargo Registry and Git Index
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-registry-${{ runner.os }}-

      - name: Cache Leptos CLI
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-leptos
          key: leptos-cli-${{ runner.os }}
          restore-keys: |
            leptos-cli-${{ runner.os }}-

      - name: Check and Install Leptos CLI
        run: |
          latest_version=$(cargo search cargo-leptos | grep -oP '(?<=^cargo-leptos = ")[^"]*')
          installed_version=$(cargo-leptos --version 2>/dev/null | awk '{print $2}' || echo "none")
          if [ "$installed_version" != "$latest_version" ]; then
            cargo install cargo-leptos --force --locked
          fi

      - name: Cache Trunk
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/trunk
          key: trunk-cli-${{ runner.os }}
          restore-keys: |
            trunk-cli-${{ runner.os }}-

      - name: Check and Install Trunk
        run: |
          latest_version=$(cargo search trunk | grep -oP '(?<=^trunk = ")[^"]*')
          installed_version=$(trunk --version 2>/dev/null | awk '{print $2}' || echo "none")
          if [ "$installed_version" != "$latest_version" ]; then
            cargo install trunk --force
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Cache npm Global Packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-global-sass-${{ runner.os }}
          restore-keys: |
            npm-global-sass-${{ runner.os }}-

      - name: Check and Install Sass
        run: |
          latest_version=$(npm view sass version)
          installed_version=$(sass --version 2>/dev/null | awk '{print $2}' || echo "none")
          if [ "$installed_version" != "$latest_version" ]; then
            npm install -g sass
          fi

      - name: Lint Rust Codebase
        run: cargo fmt -- --check

      - name: Run Rust Tests
        run: cargo test --release
      
      - name: Compile SCSS to CSS
        run: sass style/main.scss style/main.css
      
      - name: Ensure target/site Directory Exists
        run: mkdir -p target/site

      - name: Build Leptos Site with Trunk
        run: trunk build --release

      - name: Move Compiled CSS to Deployment Directory
        run: |
          mkdir -p target/site/pkg/style
          cp style/main.css target/site/pkg/style/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site/pkg